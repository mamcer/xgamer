//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("XGamerModel", "FK_Emulator_RomType", "RomType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(XGamer.Data.Entities.RomType), "Emulator", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(XGamer.Data.Entities.Emulator), true)]
[assembly: EdmRelationshipAttribute("XGamerModel", "FK_Game_RomType", "RomType", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(XGamer.Data.Entities.RomType), "Game", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(XGamer.Data.Entities.Game), true)]

#endregion

namespace XGamer.Data.Entities
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class XGamerEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new XGamerEntities object using the connection string found in the 'XGamerEntities' section of the application configuration file.
        /// </summary>
        public XGamerEntities() : base("name=XGamerEntities", "XGamerEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new XGamerEntities object.
        /// </summary>
        public XGamerEntities(string connectionString) : base(connectionString, "XGamerEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new XGamerEntities object.
        /// </summary>
        public XGamerEntities(EntityConnection connection) : base(connection, "XGamerEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Emulator> Emulator
        {
            get
            {
                if ((_Emulator == null))
                {
                    _Emulator = base.CreateObjectSet<Emulator>("Emulator");
                }
                return _Emulator;
            }
        }
        private ObjectSet<Emulator> _Emulator;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Game> Game
        {
            get
            {
                if ((_Game == null))
                {
                    _Game = base.CreateObjectSet<Game>("Game");
                }
                return _Game;
            }
        }
        private ObjectSet<Game> _Game;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<RomType> RomType
        {
            get
            {
                if ((_RomType == null))
                {
                    _RomType = base.CreateObjectSet<RomType>("RomType");
                }
                return _RomType;
            }
        }
        private ObjectSet<RomType> _RomType;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Emulator EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEmulator(Emulator emulator)
        {
            base.AddObject("Emulator", emulator);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Game EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToGame(Game game)
        {
            base.AddObject("Game", game);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the RomType EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRomType(RomType romType)
        {
            base.AddObject("RomType", romType);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="XGamerModel", Name="Emulator")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Emulator : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Emulator object.
        /// </summary>
        /// <param name="romType">Initial value of the RomType property.</param>
        /// <param name="id">Initial value of the Id property.</param>
        public static Emulator CreateEmulator(global::System.Int32 romType, global::System.Int32 id)
        {
            Emulator emulator = new Emulator();
            emulator.RomType = romType;
            emulator.Id = id;
            return emulator;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ExecutablePath
        {
            get
            {
                return _ExecutablePath;
            }
            set
            {
                OnExecutablePathChanging(value);
                ReportPropertyChanging("ExecutablePath");
                _ExecutablePath = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ExecutablePath");
                OnExecutablePathChanged();
            }
        }
        private global::System.String _ExecutablePath;
        partial void OnExecutablePathChanging(global::System.String value);
        partial void OnExecutablePathChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RomType
        {
            get
            {
                return _RomType;
            }
            set
            {
                OnRomTypeChanging(value);
                ReportPropertyChanging("RomType");
                _RomType = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RomType");
                OnRomTypeChanged();
            }
        }
        private global::System.Int32 _RomType;
        partial void OnRomTypeChanging(global::System.Int32 value);
        partial void OnRomTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Parameters
        {
            get
            {
                return _Parameters;
            }
            set
            {
                OnParametersChanging(value);
                ReportPropertyChanging("Parameters");
                _Parameters = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Parameters");
                OnParametersChanged();
            }
        }
        private global::System.String _Parameters;
        partial void OnParametersChanging(global::System.String value);
        partial void OnParametersChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("XGamerModel", "FK_Emulator_RomType", "RomType")]
        public RomType RomType1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RomType>("XGamerModel.FK_Emulator_RomType", "RomType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RomType>("XGamerModel.FK_Emulator_RomType", "RomType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<RomType> RomType1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RomType>("XGamerModel.FK_Emulator_RomType", "RomType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<RomType>("XGamerModel.FK_Emulator_RomType", "RomType", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="XGamerModel", Name="Game")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Game : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Game object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        public static Game CreateGame(global::System.Int32 id)
        {
            Game game = new Game();
            game.Id = id;
            return game;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String RomName
        {
            get
            {
                return _RomName;
            }
            set
            {
                OnRomNameChanging(value);
                ReportPropertyChanging("RomName");
                _RomName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("RomName");
                OnRomNameChanged();
            }
        }
        private global::System.String _RomName;
        partial void OnRomNameChanging(global::System.String value);
        partial void OnRomNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String GameName
        {
            get
            {
                return _GameName;
            }
            set
            {
                OnGameNameChanging(value);
                ReportPropertyChanging("GameName");
                _GameName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("GameName");
                OnGameNameChanged();
            }
        }
        private global::System.String _GameName;
        partial void OnGameNameChanging(global::System.String value);
        partial void OnGameNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Type
        {
            get
            {
                return _Type;
            }
            set
            {
                OnTypeChanging(value);
                ReportPropertyChanging("Type");
                _Type = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Type");
                OnTypeChanged();
            }
        }
        private Nullable<global::System.Int32> _Type;
        partial void OnTypeChanging(Nullable<global::System.Int32> value);
        partial void OnTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String GamePoster
        {
            get
            {
                return _GamePoster;
            }
            set
            {
                OnGamePosterChanging(value);
                ReportPropertyChanging("GamePoster");
                _GamePoster = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("GamePoster");
                OnGamePosterChanged();
            }
        }
        private global::System.String _GamePoster;
        partial void OnGamePosterChanging(global::System.String value);
        partial void OnGamePosterChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String InGamePoster
        {
            get
            {
                return _InGamePoster;
            }
            set
            {
                OnInGamePosterChanging(value);
                ReportPropertyChanging("InGamePoster");
                _InGamePoster = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("InGamePoster");
                OnInGamePosterChanged();
            }
        }
        private global::System.String _InGamePoster;
        partial void OnInGamePosterChanging(global::System.String value);
        partial void OnInGamePosterChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("XGamerModel", "FK_Game_RomType", "RomType")]
        public RomType RomType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RomType>("XGamerModel.FK_Game_RomType", "RomType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RomType>("XGamerModel.FK_Game_RomType", "RomType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<RomType> RomTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RomType>("XGamerModel.FK_Game_RomType", "RomType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<RomType>("XGamerModel.FK_Game_RomType", "RomType", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="XGamerModel", Name="RomType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RomType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new RomType object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        public static RomType CreateRomType(global::System.Int32 id, global::System.String description)
        {
            RomType romType = new RomType();
            romType.Id = id;
            romType.Description = description;
            return romType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("XGamerModel", "FK_Emulator_RomType", "Emulator")]
        public EntityCollection<Emulator> Emulator
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Emulator>("XGamerModel.FK_Emulator_RomType", "Emulator");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Emulator>("XGamerModel.FK_Emulator_RomType", "Emulator", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("XGamerModel", "FK_Game_RomType", "Game")]
        public EntityCollection<Game> Game
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Game>("XGamerModel.FK_Game_RomType", "Game");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Game>("XGamerModel.FK_Game_RomType", "Game", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
